# astro-Jupyter: Simple astrophysics in Python/Jupyter

**Colin Leach, 2018**

There were two distinct objectives in creating these notebooks.

1. I have an interest in astrophysics and am trying to learn more about it. Writing some interactive notes at the undergraduate demo level is useful practice. Obviously, this is NOT research-grade code; not even close.

2. Jupyter notebooks, Matplotlib and VPython have all been under active development in recent years, adding interesting new capabilities. Inevitably, the documentation occasionally falls a little behind the pace. I have been trying to work out what can be done with the newer features (part education, part playing).

## Setup

To run these notebooks you will need Python 3, NumPy, AstroPy and a recent (at least v 2.1) version of Matplotlib. These come standard with a default Anaconda 3 installation.

The interactive widgets need to be initialized each time the notebook is opened, so it is highly recommended to start with Cell-Run All.

## Notebooks

Astrophysics:

- radiation/1 - photons.ipynb: the electromagnetic spectrum, wavelength-frequency-energy conversion
- radiation/2 - blackbody.ipynb: basics of blackbody radiation
- gravity/1 - NewtonianOrbit.ipynb: Kepler and the gravitational 1-body problem
- gravity/2 - StellarBinary.ipynb: the gravitational 2-body problem and binary stars
- gravity/3 - LagrangePoints.ipynb: the restricted 3-body problem, effective potential and Roche lobes
- gravity/4 - SpiralGalaxies.ipynb: spiral galaxies *(still very incomplete)*

Finding, manipulating, displaying data:

- data/DataSources.ipynb

Various mathematical techniques: what they are, (briefly) why they're relevant, how to use them in Python:

- math/TaylorExpansions.ipynb
- math/Fourier.ipynb
- math/Bessel.ipynb
- math/Hermite.ipynb
- math/Legendre.ipynb
- math/SphericalHarmonics.ipynb

## How to approach these notebooks

However you choose, obviously. It may be worth remembering the motto that The Royal Society adopted in 1663: *Nullius in verba*, take nobody's word for it. Scientists are naturally skeptical people and will (probably correctly) assume that there are errors, programming inefficiencies and unclear explanations. You can produce something better, so go ahead and do it.

## References

Astropy has tutorials which are already very useful and appear to be under active development. On the web at [http://www.astropy.org/astropy-tutorials/](http://www.astropy.org/astropy-tutorials/) or clone from GitHub: [https://github.com/astropy/astropy-tutorials](https://github.com/astropy/astropy-tutorials).

[Tech Savvy Astro](https://techsavvyastro.io/) is a useful source of advice on software tools and training.

Several standard textbooks are referenced within the notebooks. These include:

```
"An Introduction to Modern Astrophysics"
Bradley W. Carroll and Dale A. Ostlie
Second Edition, Addison Wesley, 2007

"Principles of Astrophysics"
Charles Keeton
Springer, 2014

"Solar System Dynamics"
C.D. Murray and S.F. Dermott
Cambridge University Press, 1999

"Stars and Stellar Evolution"
K.S. de Boer and W. Seggewiss
EDP Sciences, 2008

"Mathematical Methods in the Physical Sciences"
M. Boas
Third Edition, Wiley, 1980
```

Additionally, some of these authors supply sample code for download:

- Carroll and Ostlie at [http://wps.aw.com/aw_carroll_ostlie_astro_2e/48/12319/3153834.cw/index.html](http://wps.aw.com/aw_carroll_ostlie_astro_2e/48/12319/3153834.cw/index.html) (Fortran and C++)

- Murray and Dermott at [http://ssdbook.maths.qmul.ac.uk/addinfo/notebook.html](http://ssdbook.maths.qmul.ac.uk/addinfo/notebook.html) (Mathematica)

None of my notebooks are simple translations (and Carroll/Ostlie explicitly asked me not to post such code), but borrowing some functions was useful and is acknowledged in the notebooks.

## Courses

Through the kindness of friends, I was allowed to audit a course at Steward Observatory, University of Arizona: ASTR 300A, "Dynamics and Mechanics in Astrophysics", Fall 2018. Many thanks to Prof Kaitlin Kratter and Michael Hammer for their support in the class, and Ruth McCutcheon for her help in setting it up. I have of course tried to avoid including anything too close to graded coursework.

Next, onwards to ASTR 300B, "Radiation and Matter", Spring 2019. I am grateful to Prof Yancy Shirley for accepting me in the class.

MOOCs are a great help to those of us who are no longer full-time students. Astronomy is perhaps under-represented in a sea of computer science courses, but several proved interesting and useful.

- ANU, [4 courses on astrophysics](https://www.edx.org/xseries/astrophysics) from Profs Brian Schmidt and Paul Francis
- EPFL, [Introduction to Astrophysics](https://www.edx.org/course/introduction-astrophysics-epflx-phys-209-enx), now available in English (in French when I did it)
- EPFL, [Space Mission Design and Operations](https://www.edx.org/course/space-mission-design-and-operations-0) is more about engineering, but the orbital mechanics is also very relevant to solar system science.
- Caltech, [The Evolving Universe](https://www.coursera.org/learn/evolvinguniverse), Prof Djorgovski giving a broad introductory course
- Caltech, Galaxies and Cosmology (sadly, unavailable currently), a follow-on course from Prof Djorgovski, taking you on a challenging ride into relativistic cosmology
- Edinburgh, [AstroTech: The Science and Technology behind Astronomical Discovery](https://www.coursera.org/learn/astronomy-technology), a (gentler) tour of how astronomy is done in practice
- Caltech, [The Science of the Solar System](https://www.coursera.org/learn/solar-system), a must-take, brilliant course in which Prof Mike Brown (@plutokiller) discusses some (quite advanced) aspects of planetary science in his inimitable style
- Sydney, [Data Driven Astronomy](https://www.coursera.org/learn/data-driven-astronomy), emphasizes computation and data handling
- Rutgers, [Analyzing the Universe](https://www.coursera.org/learn/analyze), another data-biased course
- Duke, Introduction to Astronomy (currently unavailable?), a broad and quite personal tour of the subject with Prof Ronen Plesser



